{"version":3,"sources":["components/HypixelAPI.js","components/Input.js","properties.js","components/Navbar.js","components/Stats/Bedwars.js","components/PlayerStatsPage.js","App.js","key.js","serviceWorker.js","index.js"],"names":["HypixelAPI","key","this","url","name","params","fetch","_playerDataURL","then","response","json","first","Object","entries","val","encodeURIComponent","Input","props","refInput","useRef","search","player","current","value","origin","window","location","href","className","ref","type","onKeyDown","event","autoFocus","onClick","Navbar","Provider","style","verticalAlign","p","Bedwars","stats","console","log","level","achievements","bedwars_level","finalKills","final_kills_bedwars","finalDeaths","final_deaths_bedwars","kills","kills_bedwars","deaths","deaths_bedwars","wins","wins_bedwars","losses","losses_bedwars","bedsBroken","beds_broken_bedwars","bedsLost","beds_lost_bedwars","toFixed","PlayerStatsPage","playerData","displayname","App","hypixelAPI","useState","setPlayerData","pageState","setPageState","a","data","getDataOfPlayer","useEffect","vars","substr","split","i","length","pair","decodeURIComponent","asyncSetPlayerData","height","width","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2a00716.chunk.js","sourcesContent":["export class HypixelAPI {\r\n\r\n\tconstructor(key) {\r\n\t\tthis.url = \"https://api.hypixel.net/\";\r\n\t\tthis.key = key;\r\n\t}\r\n\r\n\tgetDataOfPlayer(name) {\r\n\t\tconst params = {\r\n\t\t\tkey : this.key,\r\n\t\t\tname : name\r\n\t\t}\r\n\t\treturn fetch(this._playerDataURL(params), {'mode': 'cors', 'Access-Control-Allow-Origin': \"*\"})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((json) => {\r\n\t\t\t\tif (json['success']) {\r\n\t\t\t\t\treturn json['player'];\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\t}\r\n\r\n\t_playerDataURL(params) {\r\n\t\tlet url = this.url + \"player?\";\r\n\r\n\t\tlet first = true;\r\n\t\tfor (const [key, val] of Object.entries(params)) {\r\n\t\t\tif (!first) {\r\n\t\t\t\turl += \"&\";\r\n\t\t\t}\r\n\t\t\turl += `${key}=${encodeURIComponent(val)}`;\r\n\t\t\tfirst = false;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n}","import React, { useRef } from 'react';\r\nimport { MdSearch } from 'react-icons/md';\r\nimport './Input.css';\r\n\r\nexport function Input(props) {\r\n\r\n\tconst refInput = useRef(\"input\")\r\n\t\r\n\tfunction handleKeyDown(event) {\r\n\t\tif(event.key === \"Enter\") {\r\n\t\t\tsearch();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction search() {\r\n\t\tconst player = encodeURIComponent(refInput.current.value);\r\n\t\tif (player === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst origin = window.location.origin;\r\n\t\twindow.location.href = `${origin}/?player=${player}`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"py-1 px-2 input\">\r\n\t\t\t<input\r\n\t\t\tref={refInput}\r\n\t\t\ttype=\"text\" \r\n\t\t\tonKeyDown={handleKeyDown} \r\n\t\t\tautoFocus\r\n\t\t\t/>\r\n\t\t\t<button className=\"font-md\" onClick={search}>\r\n\t\t\t\t<MdSearch />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}","export default {\r\n\tappName: \"+25 Karma!\",\r\n\tappURL: \"https://25karma.github.io\",\r\n\tauthor: \"Amos Yu\",\r\n\tauthorURL: \"https://amosyu2000.github.io\",\r\n}","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { MdSettings } from 'react-icons/md';\r\nimport { Input } from '../components';\r\nimport p from '../properties.js';\r\n\r\nexport function Navbar(props) {\r\n\treturn (\r\n\t\t<div className=\"h-flex\">\r\n\t\t\t<IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\r\n\t\t\t\t<div className=\"flex-1 p-2 h-flex\">\r\n\t\t\t\t\t<a className=\"font-md p-1 font-minecraft c-pink text-shadow\" href={p.appURL}>\r\n\t\t\t\t\t\t{p.appName}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex-1 py-2 flex-grow-3\">\r\n\t\t\t\t\t<Input />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex-1 p-2 text-right\">\r\n\t\t\t\t\t<p className=\"font-md p-1 cursor-pointer\"><MdSettings /></p>\r\n\t\t\t\t</div>\r\n\t\t\t</IconContext.Provider>\r\n\t\t</div>\r\n\t\t);\r\n}","import React from 'react';\r\n\r\nexport function Bedwars(props) {\r\n\tconst stats = props.player.stats.Bedwars;\r\n\tconsole.log(stats);\r\n\tconst level = props.player.achievements.bedwars_level;\r\n\tconst finalKills = stats.final_kills_bedwars;\r\n\tconst finalDeaths = stats.final_deaths_bedwars;\r\n\tconst kills = stats.kills_bedwars;\r\n\tconst deaths = stats.deaths_bedwars;\r\n\tconst wins = stats.wins_bedwars;\r\n\tconst losses = stats.losses_bedwars;\r\n\tconst bedsBroken = stats.beds_broken_bedwars;\r\n\tconst bedsLost = stats.beds_lost_bedwars;\r\n\treturn (\r\n\t\t<div className=\"font-minecraft\">\r\n\t\t\tBedwars level {level}<br/>\r\n\t\t\tKDR: {(kills/deaths).toFixed(4)}<br/>\r\n\t\t\tFKDR: {(finalKills/finalDeaths).toFixed(4)}<br/>\r\n\t\t\tWL: {(wins/losses).toFixed(4)}<br/>\r\n\t\t\tBBL: {(bedsBroken/bedsLost).toFixed(4)}\r\n\t\t</div>\r\n\t\t);\r\n}","import React from 'react';\r\nimport * as Stats from './Stats';\r\n\r\nexport function PlayerStatsPage(props) {\r\n\tconst player = props.playerData;\r\n\tconst stats = player.stats;\r\n\r\n\treturn (\r\n\t\t<div className=\"v-flex align-items-center my-4\">\r\n\t\t\t<div className=\"font-md font-minecraft\">{player.displayname}</div>\r\n\t\t\t<Stats.Bedwars player={player} />\r\n\t\t</div>\r\n\t\t);\r\n}","import React, { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\nimport './App.css';\nimport { HypixelAPI, Navbar, PlayerStatsPage } from './components';\nimport key from './key.js';\n\nfunction App() {\n\n\tconst hypixelAPI = new HypixelAPI(key);\n\n\tconst [playerData, setPlayerData] = useState(null);\n\tconst [pageState, setPageState] = useState(\"idle\");\n\n\tuseEffect(() => {\n\t\t// Get params from URL\n\t\tvar params = {};\n\t\tvar vars = window.location.search.substr(1).split('&');\n\t\tfor (var i = 0; i < vars.length; i++) {\n\t\t\tvar pair = vars[i].split('=');\n\t\t\tparams[pair[0]] = decodeURIComponent(pair[1]);\n\t\t}\n\t\tif (params.player) {\n\t\t\tasyncSetPlayerData(params.player);\n\t\t}\n\t}, []);\n\n\tasync function asyncSetPlayerData(player){\n\t\tsetPageState(\"requested\");\n\t\tlet data = null;\n\t\ttry {\n\t\t\tdata = await hypixelAPI.getDataOfPlayer(player);\n\t\t} catch(e) {\n\t\t\tconsole.log(e);\n\t\t\tsetPageState(\"failed\");\n\t\t\treturn;\n\t\t}\n\t\tsetPlayerData(data);\n\t\tsetPageState(\"received\");\n\t}\n\n\tfunction renderBody() {\n\t\tif (pageState === \"idle\") {\n\t\t\treturn (\n\t\t\t\t<div className=\"h-flex justify-content-center my-4\">\n\t\t\t\t\tEnter a player name.\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n\t\telse if (pageState === \"requested\") {\n\t\t\treturn (\n\t\t\t\t<div className=\"h-flex justify-content-center my-4\">\n\t\t\t\t\t<ReactLoading type=\"spin\" height=\"5rem\" width=\"5rem\"/>\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n\t\telse if (pageState === \"failed\") {\n\t\t\treturn (\n\t\t\t\t<div className=\"h-flex justify-content-center my-4\">\n\t\t\t\t\tAPI call failed.\n\t\t\t\t</div>\n\t\t\t\t);\n\t\t}\n\t\telse if (pageState === \"received\") {\n\t\t\treturn (\n\t\t\t\t<PlayerStatsPage playerData={playerData} />\n\t\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<div className=\"container\">\n\t\t\t\t{renderBody()}\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default App;\n","export default \"9f0c2f20-3c01-4645-86f9-32e51feda714\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}