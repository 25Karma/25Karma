{"version":3,"sources":["components/Banner.js","components/Button.js","components/Link.js","properties.js","components/Navbar.js","utils/utils.js","components/Searchbar.js","components/Settings.js","components/FrontPage.js","components/LoadingPage.js","components/Stats/Bedwars.js","components/PlayerStatsPage.js","App.js","key.js","serviceWorker.js","index.js"],"names":["Banner","props","useState","visibility","setVisibility","type","getType","classType","symbolType","useEffect","className","Provider","value","title","description","Button","onClick","children","Link","target","rel","href","Navbar","settingsShown","setSettingsShown","toggleSettings","Fragment","origin","window","location","toFrontPage","p","toggle","HypixelAPI","key","this","url","properties","name","params","fetch","_playerDataURL","then","response","json","first","Object","entries","val","encodeURIComponent","searchForPlayer","playerName","player","Searchbar","refInput","useRef","search","Utils","current","ref","onKeyDown","event","autoFocus","Settings","pinnedPlayerInput","data-tip","placeholder","defaultValue","Cookies","get","set","FrontPage","banner","LoadingPage","height","width","Bedwars","stats","level","achievements","bedwars_level","finalKills","final_kills_bedwars","finalDeaths","final_deaths_bedwars","kills","kills_bedwars","deaths","deaths_bedwars","wins","wins_bedwars","losses","losses_bedwars","bedsBroken","beds_broken_bedwars","bedsLost","beds_lost_bedwars","toFixed","PlayerStatsPage","playerData","displayname","App","hypixelAPI","vars","substr","split","i","length","pair","decodeURIComponent","setPlayerData","pageState","setPageState","a","data","getDataOfPlayer","asyncSetPlayerData","redirect","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8b157e0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { MdError, MdThumbUp } from 'react-icons/md';\r\nimport './Banner.css';\r\n\r\nexport function Banner(props) {\r\n\r\n\tconst [visibility, setVisibility] = useState(false);\r\n\tconst [classType, symbolType] = getType();\r\n\r\n\tfunction getType() {\r\n\t\tif (props.type === \"error\") {\r\n\t\t\treturn [\"banner-error\", <MdError />];\r\n\t\t}\r\n\t\telse if (props.type === \"success\") {\r\n\t\t\treturn [\"banner-success\", <MdThumbUp />];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getVisibility() {\r\n\t\treturn visibility ? 'banner-vis' : 'banner-invis';\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetVisibility(true);\r\n\t},[]);\r\n\r\n\treturn (\r\n\t\t<div className={`py-1 px-3 rounded ${getVisibility()} ${classType}`}>\r\n\t\t\t<IconContext.Provider value={{ className: 'react-icons' }}>\r\n\t\t\t\t<span className=\"font-md pr-1\">\r\n\t\t\t\t\t{symbolType}\r\n\t\t\t\t</span>\r\n\t\t\t</IconContext.Provider>\r\n\t\t\t<span className=\"font-bold\">{props.title}</span>\r\n\t\t\t<span>{props.description}</span>\r\n\t\t</div>\r\n\t\t)\r\n}","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport function Button(props) {\r\n\treturn (\r\n\t\t<button className=\"btn25 py-1 px-2\" onClick={props.onClick}>{props.children}</button>\r\n\t\t);\r\n}","import React from 'react';\r\n\r\nexport function Link(props) {\r\n\treturn <a className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.href}>\r\n\t\t\t{props.children}\r\n\t\t</a>;\r\n}","export default {\n\tappName: \"25Karma\",\n\tappNickname : \"+25 Karma!\",\n\tappURL: \"https://25karma.github.io/\",\n\tauthor: \"Amos Yu\",\n\tauthorURL: \"https://amosyu2000.github.io/\",\n\thypixelAPI: \"Hypixel API\",\n\thypixelAPIURL: \"https://api.hypixel.net/\",\n\tgitHubName: \"GitHub Pages\",\n\tgitHubURL: \"https://pages.github.com/\"\n}","import React, { useState } from 'react';\nimport { IconContext } from 'react-icons';\nimport { MdSettings } from 'react-icons/md';\nimport p from '../properties.js';\nimport { Settings } from '../components';\n\nexport function Navbar(props) {\n\n\tfunction toFrontPage() {\n\t\tconst origin = window.location.origin;\n\t\treturn `${origin}/?redirect=false`;\n\t}\n\tconst [settingsShown, setSettingsShown] = useState(false);\n\tfunction toggleSettings() {\n\t\tsetSettingsShown(!settingsShown)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"h-flex\">\n\t\t\t\t\t<div className=\"flex-1 p-1 h-flex\">\n\t\t\t\t\t\t<a className=\"font-md p-1 font-minecraft c-pink text-shadow\" href={toFrontPage()}>\n\t\t\t\t\t\t\t{p.appNickname}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex-1 py-1 flex-grow-3\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex-1 p-1 text-right\">\n\t\t\t\t\t\t<IconContext.Provider value={{ className: 'react-icons' }}>\n\t\t\t\t\t\t\t<p className=\"p-1\">\n\t\t\t\t\t\t\t\t<button className=\"font-md settings-button\" onClick={toggleSettings}>\n\t\t\t\t\t\t\t\t\t<MdSettings />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</IconContext.Provider>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={settingsShown ? 'settings-shown' : 'settings-hidden'}>\n\t\t\t\t<Settings toggle={toggleSettings}/>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t\t);\n}","import properties from '../properties.js';\n\nexport class HypixelAPI {\n\n\tconstructor(key) {\n\t\tthis.url = properties.hypixelAPIURL;\n\t\tthis.key = key;\n\t}\n\n\tgetDataOfPlayer(name) {\n\t\tconst params = {\n\t\t\tkey : this.key,\n\t\t\tname : name\n\t\t}\n\t\treturn fetch(this._playerDataURL(params), {'mode': 'cors', 'Access-Control-Allow-Origin': \"*\"})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json['success']) {\n\t\t\t\t\treturn json['player'];\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\t_playerDataURL(params) {\n\t\tlet url = this.url + \"player?\";\n\n\t\tlet first = true;\n\t\tfor (const [key, val] of Object.entries(params)) {\n\t\t\tif (!first) {\n\t\t\t\turl += \"&\";\n\t\t\t}\n\t\t\turl += `${key}=${encodeURIComponent(val)}`;\n\t\t\tfirst = false;\n\t\t}\n\n\t\treturn url;\n\t}\n}\n\nexport function getURLParams() {\n\t// Get params from URL\n\tvar params = {};\n\tvar vars = window.location.search.substr(1).split('&');\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=');\n\t\tparams[pair[0]] = decodeURIComponent(pair[1]);\n\t}\n\treturn params;\n}\n\nexport function searchForPlayer(playerName) {\n\tconst player = encodeURIComponent(playerName);\n\tif (player === \"\") {\n\t\treturn;\n\t}\n\tconst origin = window.location.origin;\n\twindow.location.href = `${origin}/?player=${player}`;\n}\n\nexport function set1If0(number) {\n\tif (number === 0) {\n\t\treturn 1;\n\t}\n\treturn number;\n}\n\nexport function inheritClassName(props) {\n\tconst className = props.className;\n\tif (className === undefined) return ''\n\treturn className\n}","import React, { useRef } from 'react';\nimport { IconContext } from 'react-icons';\nimport { MdSearch } from 'react-icons/md';\nimport './Searchbar.css';\nimport * as Utils from '../utils';\n\nexport function Searchbar(props) {\n\n\tconst refInput = useRef(\"input\")\n\t\n\tfunction handleKeyDown(event) {\n\t\tif(event.key === \"Enter\") {\n\t\t\tsearch();\n\t\t}\n\t}\n\n\tfunction search() {\n\t\tconst player = refInput.current.value;\n\t\tUtils.searchForPlayer(player);\n\t}\n\n\treturn (\n\t\t<div className=\"py-1 px-2 input\">\n\t\t\t<input\n\t\t\tref={refInput}\n\t\t\ttype=\"text\" \n\t\t\tonKeyDown={handleKeyDown} \n\t\t\tautoFocus\n\t\t\t/>\n\t\t\t<IconContext.Provider value={{ className: 'react-icons' }}>\n\t\t\t\t<button className=\"font-md\" onClick={search}>\n\t\t\t\t\t<MdSearch />\n\t\t\t\t</button>\n\t\t\t</IconContext.Provider>\n\t\t</div>\n\t);\n}","import React, { useRef } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport Cookies from 'js-cookie';\nimport './Settings.css';\nimport { Banner, Button } from '../components';\n\nexport function Settings(props) {\n\n\tconst pinnedPlayerInput = useRef('pinnedPlayer');\n\n\tfunction setSettings() {\n\t\tCookies.set('pinnedPlayer', pinnedPlayerInput.current.value);\n\t\tprops.toggle();\n\t}\n\n\treturn (\n\t\t<div className=\"settings p-2\">\n\t\t\t<div className=\"container v-flex\">\n\t\t\t\t<div className=\"h-flex align-items-center pb-2\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tdata-tip=\"The player you would like to load by default when you visit this page.\" \n\t\t\t\t\t\tclassName=\"font-bold cursor-help pr-2\">\n\t\t\t\t\t\tPinned Player\n\t\t\t\t\t</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\tref={pinnedPlayerInput}\n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tplaceholder=\"ex. Technoblade\" \n\t\t\t\t\t\tdefaultValue={Cookies.get('pinnedPlayer')}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"h-flex justify-content-center\">\n\t\t\t\t\t<Button onClick={setSettings}><p className=\"text-shadow\">Save Settings</p></Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ReactTooltip />\n\t\t</div>\n\t\t);\n}","import React from 'react';\r\nimport { Navbar, Searchbar } from '../components';\r\nimport properties from '../properties.js';\r\n\r\nexport function FrontPage(props) {\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar></Navbar>\r\n\t\t\t<div className=\"container v-flex align-items-center my-4\">\r\n\t\t\t\t<p className=\"pb-4 font-xl font-minecraft c-pink text-shadow\">\r\n\t\t\t\t\t{properties.appName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"w-100 font-md font-minecraft pb-2 pl-2\">\r\n\t\t\t\t\tSearch for the stats of a Hypixel player\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"w-100 pb-3\">\r\n\t\t\t\t\t<div className=\"pb-2\">\r\n\t\t\t\t\t\t<Searchbar />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{props.banner ? props.banner : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"w-50 pb-2 text-center\">\r\n\t\t\t\t\tPro tip: Customize this site by clicking on the settings button \r\n\t\t\t\t\tin the top-right corner. \r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { Navbar } from '../components';\r\n\r\nexport function LoadingPage(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar></Navbar>\r\n\t\t\t<div className=\"container v-flex align-items-center my-4\">\r\n\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t<ReactLoading type=\"spin\" height=\"5rem\" width=\"5rem\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"font-md\">Loading stats for {props.player}...</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}","import React from 'react';\n\nexport function Bedwars(props) {\n\tconst stats = props.player.stats.Bedwars;\n\tconst level = props.player.achievements.bedwars_level;\n\tconst finalKills = stats.final_kills_bedwars;\n\tconst finalDeaths = stats.final_deaths_bedwars;\n\tconst kills = stats.kills_bedwars;\n\tconst deaths = stats.deaths_bedwars;\n\tconst wins = stats.wins_bedwars;\n\tconst losses = stats.losses_bedwars;\n\tconst bedsBroken = stats.beds_broken_bedwars;\n\tconst bedsLost = stats.beds_lost_bedwars;\n\treturn (\n\t\t<div className=\"font-minecraft\">\n\t\t\tBedwars level {level}<br/>\n\t\t\tKDR: {(kills/deaths).toFixed(4)}<br/>\n\t\t\tFKDR: {(finalKills/finalDeaths).toFixed(4)}<br/>\n\t\t\tWL: {(wins/losses).toFixed(4)}<br/>\n\t\t\tBBL: {(bedsBroken/bedsLost).toFixed(4)}\n\t\t</div>\n\t\t);\n}","import React from 'react';\nimport * as Stats from './Stats';\nimport { Navbar, Searchbar } from '../components';\n\nexport function PlayerStatsPage(props) {\n\tconst player = props.playerData;\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar><Searchbar /></Navbar>\n\t\t\t<div className=\"container v-flex align-items-center my-4\">\n\t\t\t\t<div className=\"font-md font-minecraft\">{player.displayname}</div>\n\t\t\t\t<Stats.Bedwars player={player} />\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}","import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\nimport { Banner, Link, FrontPage, LoadingPage, PlayerStatsPage } from './components';\nimport * as Utils from './utils';\nimport p from './properties.js';\nimport key from './key.js';\n\nfunction App() {\n\n\tconst hypixelAPI = new Utils.HypixelAPI(key);\n\tconst params = Utils.getURLParams();\n\n\tconst [playerData, setPlayerData] = useState(null);\n\tconst [pageState, setPageState] = useState(\"idle\");\n\n\tuseEffect(() => {\n\t\tif (params.player) {\n\t\t\tasyncSetPlayerData(params.player);\n\t\t}\n\t}, []);\n\n\tasync function asyncSetPlayerData(player){\n\t\tsetPageState(\"requested\");\n\t\tlet data = null;\n\t\ttry {\n\t\t\tdata = await hypixelAPI.getDataOfPlayer(player);\n\t\t} catch(e) {\n\t\t\tsetPageState(\"failed\");\n\t\t\treturn;\n\t\t}\n\t\tsetPlayerData(data);\n\t\tsetPageState(\"received\");\n\t}\n\n\tfunction render() {\n\t\tif (params.redirect === \"false\") {\n\t\t\treturn <FrontPage />;\n\t\t}\n\t\tif (!params.player && Cookies.get('pinnedPlayer')) {\n\t\t\tUtils.searchForPlayer(Cookies.get('pinnedPlayer'));\n\t\t\treturn;\n\t\t}\n\t\tif (pageState === \"idle\") {\n\t\t\treturn <FrontPage />;\n\t\t}\n\t\tif (pageState === \"requested\") {\n\t\t\treturn <LoadingPage player={params.player} />;\n\t\t} \n\t\tif (pageState === \"failed\") {\n\t\t\tconst banner = (\n\t\t\t\t<Banner type=\"error\"\n\t\t\t\t\ttitle='API call failed. '\n\t\t\t\t\tdescription='The site failed to fetch from the Hypixel API.'/>\n\t\t\t\t);\n\t\t\treturn <FrontPage banner={banner} />\n\t\t}\n\t\tif (pageState === \"received\") {\n\t\t\tif (playerData === null) {\n\t\t\t\tconst banner = <Banner type=\"error\"\n\t\t\t\t\ttitle='Player not found. '\n\t\t\t\t\tdescription={`Could not find a player with the name \"${params.player}\".`}/>\n\t\t\t\treturn <FrontPage banner={banner} />\n\t\t\t}\n\t\t\treturn <PlayerStatsPage playerData={playerData} />;\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"h-100 v-flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t{render()}\n\t\t\t</div>\n\t\t\t<div className=\"p-1 footer\">\n\t\t\t\t<small>\n\t\t\t\t\tPowered by the&nbsp;\n\t\t\t\t\t<Link href={p.hypixelAPIURL}>{p.hypixelAPI}</Link>. \n\t\t\t\t\tHosted on&nbsp;\n\t\t\t\t\t<Link href={p.gitHubURL}>{p.gitHubName}</Link>.\n\t\t\t\t</small>\n\t\t\t\t<small>\n\t\t\t\t\tMade with ❤️ by&nbsp;\n\t\t\t\t\t<Link href={p.authorURL}>{p.author}</Link>.\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default App;\n","export default \"9f0c2f20-3c01-4645-86f9-32e51feda714\"","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}